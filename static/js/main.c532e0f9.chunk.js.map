{"version":3,"sources":["Images/pause.svg","Images/play.svg","Images/reset.svg","Chrono/Chrono.js","App.js","index.js"],"names":["Chrono","useState","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","useReducer","state","action","type","dispatch","useEffect","id","window","setInterval","clearInterval","handleSession","e","el","target","classList","contains","handleBreak","className","onClick","Math","trunc","src","PauseImg","PlayImg","ResetImg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kC,OCwH1BA,EAlHA,WAAO,IAAD,EAEqBC,mBAAS,MAF9B,mBAEVC,EAFU,KAEGC,EAFH,OAG+BF,mBAAS,MAHxC,mBAGVG,EAHU,KAGQC,EAHR,OAKiBJ,mBAAS,KAL1B,mBAKVK,EALU,KAKCC,EALD,OAM2BN,mBAAS,KANpC,mBAMVO,EANU,KAMMC,EANN,OAQyBR,oBAAS,GARlC,mBAQVS,EARU,KAQKC,EARL,OASSC,sBAE1B,SAAiBC,EAAMC,GACnB,OAAOA,EAAOC,MACV,IAAK,OACEb,GAAe,EACdC,EAAeD,EAAY,GACpBI,GAAY,EACnBC,EAAaD,EAAU,GAChBA,GAAa,GAAKA,GAAY,IACrCH,EAAeC,GACfG,EAAaC,QApBZ,mBASHQ,GATG,WA0BjBC,qBAAU,WACN,IAAIC,EAQJ,OANGR,IACCQ,EAAGC,OAAOC,aAAY,WAClBJ,EAAS,CAACD,KAAK,WACjB,MAGC,WACHI,OAAOE,cAAcH,MAE1B,CAACR,IAEJ,IAMMY,EAAgB,SAAAC,GAClB,IAAMC,EAAKD,EAAEE,OAEVD,EAAGE,UAAUC,SAAS,SAClBzB,EAAY,GAAI,IACfC,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,KAErCoB,EAAGE,UAAUC,SAAS,UAC5BxB,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,MAIzCwB,EAAc,SAAAL,GAChB,IAAMC,EAAKD,EAAEE,OAEVD,EAAGE,UAAUC,SAAS,SAClBrB,EAAU,GAAI,IACbC,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,KAEjCgB,EAAGE,UAAUC,SAAS,UAC5BpB,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,MAY3C,OACI,sBAAKqB,UAAWnB,EAAgB,6BAA+B,mBAA/D,UACG,sBAAKmB,UAAU,mBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,wBAAQA,UAAU,QAAQC,QAASR,EAAnC,eACA,+BAAOlB,EAAiB,KACxB,wBAAQyB,UAAU,OAAOC,QAASR,EAAlC,kBAEJ,sBAAKO,UAAU,iBAAf,UACI,wBAAQA,UAAU,QAAQC,QAASF,EAAnC,eACA,+BAAOpB,EAAe,KACtB,wBAAQqB,UAAU,OAAOC,QAASF,EAAlC,qBAGR,6BACK1B,GAAe,EACZ,yCAAU6B,KAAKC,MAAM9B,EAAY,IAAjC,cAA0CA,EAAY,GAAK,GAAjB,WAA0BA,EAAY,IAAtC,UAAgDA,EAAY,OACtG,yCAAU6B,KAAKC,MAAM1B,EAAU,IAA/B,cAAwCA,EAAU,GAAK,GAAf,WAAwBA,EAAU,IAAlC,UAA4CA,EAAU,SAGtG,sBAAKuB,UAAU,wBAAf,UACI,wBAAQC,QA/DD,WACdnB,GAAkBD,IA8DX,SACI,qBAAKuB,IAAKvB,EAAgBwB,EAAWC,MAEzC,wBAAQL,QAhCD,WACXpB,GACCC,GAAkBD,GAEtBP,EAAeC,GACfG,EAAaC,IA2BN,SACI,qBAAKyB,IAAKG,aCvGdC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCANS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c532e0f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f8c47a1a.svg\";","export default __webpack_public_path__ + \"static/media/play.b23df41a.svg\";","export default __webpack_public_path__ + \"static/media/reset.adefad1d.svg\";","import React, {useState, useEffect, useReducer} from 'react';\r\nimport \"./Chrono.css\";\r\nimport PauseImg from '../Images/pause.svg';\r\nimport PlayImg from '../Images/play.svg';\r\nimport ResetImg from '../Images/reset.svg';\r\n\r\nconst Chrono = () => {\r\n\r\n    const [sessionTime, setSessionTime] = useState(1500);\r\n    const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\r\n\r\n    const [breakTime, setBreakTime] = useState(300);\r\n    const [breakTimeFixed, setBreakTimeFixed] = useState(300);\r\n\r\n    const [workingChrono, setWorkingChrono] = useState(false);\r\n    const [state, dispatch] = useReducer(reducer);\r\n\r\n    function reducer(state,action) {\r\n        switch(action.type){\r\n            case 'TICK':\r\n                if(sessionTime >= 0){\r\n                    setSessionTime(sessionTime-1)\r\n                } else if (breakTime >=1){\r\n                    setBreakTime(breakTime-1)\r\n                } else if (breakTime <= 0 && breakTime <=0){\r\n                    setSessionTime(sessionTimeFixed)\r\n                    setBreakTime(breakTimeFixed)\r\n                }\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let id;\r\n\r\n        if(workingChrono) {\r\n            id=window.setInterval(() => {\r\n                dispatch({type:'TICK'})\r\n            },1000)\r\n        }\r\n\r\n        return () => {\r\n            window.clearInterval(id)\r\n        }\r\n    }, [workingChrono])\r\n\r\n    const playPause = () => {\r\n        setWorkingChrono(!workingChrono)\r\n    }\r\n\r\n    //console.log(workingChrono)\r\n\r\n    const handleSession = e => {\r\n        const el = e.target;\r\n\r\n        if(el.classList.contains('minus')){\r\n            if(sessionTime/60 >1) {\r\n                setSessionTime(sessionTime - 60)\r\n                setSessionTimeFixed(sessionTimeFixed - 60)\r\n            }\r\n        }else if (el.classList.contains('plus')) {\r\n            setSessionTime(sessionTime + 60)\r\n            setSessionTimeFixed(sessionTimeFixed + 60)\r\n        }\r\n    }\r\n\r\n    const handleBreak = e => {\r\n        const el = e.target;\r\n\r\n        if(el.classList.contains('minus')){\r\n            if(breakTime/60 >1) {\r\n                setBreakTime(breakTime - 60)\r\n                setBreakTimeFixed(breakTimeFixed - 60)\r\n            }\r\n        }else if (el.classList.contains('plus')) {\r\n            setBreakTime(breakTime + 60)\r\n            setBreakTimeFixed(breakTimeFixed + 60)\r\n        }\r\n    }\r\n\r\n    const resetFunc = () => {\r\n        if(workingChrono)  {\r\n            setWorkingChrono(!workingChrono)\r\n        }\r\n        setSessionTime(sessionTimeFixed)\r\n        setBreakTime(breakTimeFixed)\r\n    }\r\n\r\n    return (\r\n        <div className={workingChrono ? 'container-chrono anim-glow' : 'container-chrono'}>\r\n           <div className=\"container-config\">\r\n               <div className=\"box-btns session\">\r\n                   <button className=\"minus\" onClick={handleSession}>-</button>\r\n                   <span>{sessionTimeFixed/60}</span>\r\n                   <button className=\"plus\" onClick={handleSession}>+</button>\r\n               </div>\r\n               <div className=\"box-btns break\">\r\n                   <button className=\"minus\" onClick={handleBreak}>-</button>\r\n                   <span>{breakTimeFixed/60}</span>\r\n                   <button className=\"plus\" onClick={handleBreak}>+</button>\r\n               </div>\r\n           </div>\r\n           <h1>\r\n               {sessionTime >= 0 ? (\r\n                   <span>{`${Math.trunc(sessionTime/60)} : ${sessionTime%60 < 10 ? `0${sessionTime%60}` : `${sessionTime%60}`}`}</span>\r\n               ) : <span>{`${Math.trunc(breakTime/60)} : ${breakTime%60 < 10 ? `0${breakTime%60}` : `${breakTime%60}`}`}</span>}\r\n           </h1>\r\n\r\n           <div className=\"container-controllers\">\r\n               <button onClick={playPause}>\r\n                   <img src={workingChrono ? PauseImg : PlayImg}  />\r\n               </button>\r\n               <button onClick={resetFunc}>\r\n                   <img src={ResetImg}  />\r\n               </button>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chrono;","import Chrono from './Chrono/Chrono'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chrono/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}